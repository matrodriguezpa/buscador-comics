{"ast":null,"code":"var _jsxFileName = \"/home/teo/Documents/buscador-comics/frontend/src/ComicSearch.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ComicSearch() {\n  _s();\n  const [date, setDate] = useState(\"\");\n  const [comics, setComics] = useState([]);\n  const searchComics = () => {\n    // Log the date selected by the user\n    console.log(\"Searching for comics released on:\", date);\n\n    // Make the API request\n    axios.get(`http://localhost:8080/api/comics/new-releases?date=${date}`).then(response => {\n      console.log(\"API Response:\", response.data); // Log the response data\n\n      // Check if the response has a comics array and update the state\n      if (response.data.comics && response.data.comics.length > 0) {\n        setComics(response.data.comics); // Correctly access the comics array\n      } else {\n        console.log(\"No comics found for the selected date.\"); // Log if no comics are found\n        setComics([]); // Clear the comics array\n      }\n    }).catch(error => {\n      console.error(\"There was an error fetching the comics!\", error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Search Comics by Release Date\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      value: date,\n      onChange: e => setDate(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: searchComics,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: comics.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: comics.map((comic, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: comic.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Publisher: \", comic.publisher]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Release Date: \", comic.release_date]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No comics found for the selected date.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(ComicSearch, \"sp+JnkZJG8zZrglkIrZrWzMkg0k=\");\n_c = ComicSearch;\nexport default ComicSearch;\nvar _c;\n$RefreshReg$(_c, \"ComicSearch\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ComicSearch","_s","date","setDate","comics","setComics","searchComics","console","log","get","then","response","data","length","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","map","comic","index","title","publisher","release_date","_c","$RefreshReg$"],"sources":["/home/teo/Documents/buscador-comics/frontend/src/ComicSearch.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nfunction ComicSearch() {\n  const [date, setDate] = useState(\"\");\n  const [comics, setComics] = useState([]);\n\n  const searchComics = () => {\n    // Log the date selected by the user\n    console.log(\"Searching for comics released on:\", date);\n\n    // Make the API request\n    axios\n      .get(`http://localhost:8080/api/comics/new-releases?date=${date}`)\n      .then((response) => {\n        console.log(\"API Response:\", response.data); // Log the response data\n        \n        // Check if the response has a comics array and update the state\n        if (response.data.comics && response.data.comics.length > 0) {\n          setComics(response.data.comics); // Correctly access the comics array\n        } else {\n          console.log(\"No comics found for the selected date.\"); // Log if no comics are found\n          setComics([]); // Clear the comics array\n        }\n      })\n      .catch((error) => {\n        console.error(\"There was an error fetching the comics!\", error);\n      });\n  };\n\n  return (\n    <div>\n      <h1>Search Comics by Release Date</h1>\n      <input\n        type=\"date\"\n        value={date}\n        onChange={(e) => setDate(e.target.value)}\n      />\n      <button onClick={searchComics}>Search</button>\n\n      <div>\n        {comics.length > 0 ? (\n          <ul>\n            {comics.map((comic, index) => (\n              <li key={index}>\n                <h2>{comic.title}</h2>\n                <p>Publisher: {comic.publisher}</p>\n                <p>Release Date: {comic.release_date}</p>\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <p>No comics found for the selected date.</p>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default ComicSearch;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}