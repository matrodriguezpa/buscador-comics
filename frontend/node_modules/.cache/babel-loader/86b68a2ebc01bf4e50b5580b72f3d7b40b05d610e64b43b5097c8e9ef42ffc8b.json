{"ast":null,"code":"//get info through searches\n\nconst {\n  URL\n} = require('../endpoints/endpoints');\nconst cheerio = require('cheerio');\nconst axios = require('axios');\nconst {\n  infoScraper\n} = require('../functions/infoScraper');\nexports.getComicsThroughSearch = (query, page = 1) => {\n  return new Promise((resolve, reject) => {\n    search = query.trim().split(\" \").join('+');\n    axios(`${URL.searchUri1}/${page}/${URL.searchUri2}${search}`).then(response => {\n      const $ = cheerio.load(response.data);\n      const comics = [];\n      const error = $('.pagination-button').text();\n      if (error === \"No Result: Please try another search query.\") {\n        reject(\"No results availabe for you search query\");\n      }\n      $('article').each(function () {\n        let coverPage = $(this).find('img').attr('src');\n        let valid = $(this).find('.post-info').children().remove().end().text();\n        let href = $(this).find('a').attr('href');\n        if (valid) {\n          const promise = new Promise((resolve, reject) => {\n            axios(`${href}`).then(response => {\n              const $ = cheerio.load(response.data);\n              const title = $('.post-info').find('h1').text().trim();\n              const description = $('.post-contents').find('p').first().children().remove().end().text().trim();\n              const scrapedInfo = $('.post-contents > p:nth-child(7)').text().split(\"|\").splice(1, 3).join().toString();\n              let downloadLinks = {};\n              $('.aio-pulse').each(function () {\n                const scrapedDownloadTitle = $(this).children('a').attr('title').split(' ').join('');\n                const scrapedDownloadLinks = $(this).children('a').attr('href');\n                downloadLinks[scrapedDownloadTitle] = scrapedDownloadLinks;\n              });\n              const information = infoScraper(scrapedInfo);\n              const comic = {\n                title,\n                description,\n                coverPage,\n                information,\n                downloadLinks\n              };\n              resolve(comic);\n            }).catch(err => {\n              if (err) {\n                reject(err);\n              }\n            });\n          });\n          comics.push(promise);\n        }\n      });\n      resolve(Promise.all(comics));\n    }).catch(err => {\n      if (err) {\n        reject(err);\n      }\n    });\n  });\n};","map":{"version":3,"names":["URL","require","cheerio","axios","infoScraper","exports","getComicsThroughSearch","query","page","Promise","resolve","reject","search","trim","split","join","searchUri1","searchUri2","then","response","$","load","data","comics","error","text","each","coverPage","find","attr","valid","children","remove","end","href","promise","title","description","first","scrapedInfo","splice","toString","downloadLinks","scrapedDownloadTitle","scrapedDownloadLinks","information","comic","catch","err","push","all"],"sources":["/home/teo/Documents/buscador-comics/frontend/node_modules/comicbooks-api/src/search.js"],"sourcesContent":["//get info through searches\n\nconst { URL } = require('../endpoints/endpoints');\nconst cheerio = require('cheerio');\nconst axios = require('axios');\n\nconst { infoScraper } = require('../functions/infoScraper');\n\nexports.getComicsThroughSearch = (query, page = 1) => {\n\n    return new Promise((resolve, reject) => {\n        search = query.trim().split(\" \").join('+');\n\n        axios(`${URL.searchUri1}/${page}/${URL.searchUri2}${search}`).then(\n            response => {\n                const $ = cheerio.load(response.data);\n\n                const comics = [];\n\n                const error = $('.pagination-button').text();\n                if(error === \"No Result: Please try another search query.\") {\n                    reject(\"No results availabe for you search query\");\n                }\n\n                $('article').each(\n                    function() {\n                        let coverPage = $(this).find('img').attr('src');\n                        let valid = $(this).find('.post-info').children().remove().end().text();\n                        let href = $(this).find('a').attr('href');\n\n                        if(valid) {\n                            const promise = new Promise((resolve, reject) => {\n                                axios(`${href}`).then(response => {\n\n                                    const $ = cheerio.load(response.data);\n\n                                    const title = $('.post-info').find('h1').text().trim();\n                                    const description = $('.post-contents').find('p').first().children().remove().end().text().trim();\n                                    const scrapedInfo = $('.post-contents > p:nth-child(7)').text().split(\"|\").splice(1, 3).join().toString();\n\n                                    let downloadLinks = {};\n                                    $('.aio-pulse').each(function() {\n                                        const scrapedDownloadTitle = $(this).children('a').attr('title').split(' ').join('');\n                                        const scrapedDownloadLinks = $(this).children('a').attr('href');\n                                        downloadLinks[ scrapedDownloadTitle ] = scrapedDownloadLinks;\n                                    });\n\n                                    const information = infoScraper(scrapedInfo);\n\n                                    const comic = {\n                                        title, description, coverPage, information, downloadLinks\n                                    };\n                                    resolve(comic);\n                                }).catch(\n                                    err => {\n                                        if(err) { reject(err); }\n                                    });\n                            });\n                            comics.push(promise);\n                        }\n                    }\n                );\n                resolve(Promise.all(comics));\n            }).catch(err => {\n                if(err) { reject(err); }\n            });\n    });\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}