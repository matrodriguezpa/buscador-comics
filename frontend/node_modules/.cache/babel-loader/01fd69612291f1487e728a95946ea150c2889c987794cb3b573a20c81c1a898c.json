{"ast":null,"code":"var _jsxFileName = \"/home/teo/Documents/buscador-comics/frontend/src/components/ComicSearch.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport '../index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst comicsApi = require('comicbooks-api');\nfunction ComicSearch() {\n  _s();\n  const [publisher, setPublisher] = useState(\"\");\n  const [comics, setComics] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const searchComics = async () => {\n    try {\n      let response = [];\n\n      // Search by publisher\n      if (publisher) {\n        switch (publisher.toLowerCase()) {\n          case \"marvel\":\n            response = await comicsApi.getMarvelComics(1);\n            break;\n          case \"dc\":\n            response = await comicsApi.getDCComics(1);\n            break;\n          case \"archie\":\n            response = await comicsApi.getArchieComics(1);\n            break;\n          case \"image\":\n            response = await comicsApi.getImageComics(1);\n            break;\n          // Add more cases as necessary for other publishers\n          default:\n            console.log(\"Unknown publisher\");\n            return;\n        }\n      } else if (searchQuery) {\n        // Search by query if provided\n        response = await comicsApi.getComicsThroughSearch(searchQuery, 1);\n      }\n      setComics(response || []);\n    } catch (error) {\n      console.error(\"There was an error fetching the comics!\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Publisher:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: publisher,\n          onChange: e => setPublisher(e.target.value),\n          placeholder: \"Marvel, DC, Archie, etc.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Search Query:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: searchQuery,\n          onChange: e => setSearchQuery(e.target.value),\n          placeholder: \"e.g., Batman\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: searchComics,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: comics.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: comics.map((comic, index) => {\n          var _comic$information, _comic$information2, _comic$information3;\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: comic.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: comic.coverPage,\n              alt: comic.title,\n              style: {\n                width: '200px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Description: \", comic.description]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Year: \", (_comic$information = comic.information) === null || _comic$information === void 0 ? void 0 : _comic$information.Year]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Size: \", (_comic$information2 = comic.information) === null || _comic$information2 === void 0 ? void 0 : _comic$information2.Size]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Format: \", (_comic$information3 = comic.information) === null || _comic$information3 === void 0 ? void 0 : _comic$information3.ImageFormat]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No comics found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(ComicSearch, \"7B/PVYq7So484g+/PR8kUkwkyO8=\");\n_c = ComicSearch;\nexport default ComicSearch;\nvar _c;\n$RefreshReg$(_c, \"ComicSearch\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","comicsApi","require","ComicSearch","_s","publisher","setPublisher","comics","setComics","searchQuery","setSearchQuery","searchComics","response","toLowerCase","getMarvelComics","getDCComics","getArchieComics","getImageComics","console","log","getComicsThroughSearch","error","className","children","type","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","map","comic","index","_comic$information","_comic$information2","_comic$information3","title","src","coverPage","alt","style","width","description","information","Year","Size","ImageFormat","_c","$RefreshReg$"],"sources":["/home/teo/Documents/buscador-comics/frontend/src/components/ComicSearch.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport '../index.css';\nconst comicsApi = require('comicbooks-api');\n\nfunction ComicSearch() {\n  const [publisher, setPublisher] = useState(\"\");\n  const [comics, setComics] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n\n  const searchComics = async () => {\n    try {\n      let response = [];\n\n      // Search by publisher\n      if (publisher) {\n        switch (publisher.toLowerCase()) {\n          case \"marvel\":\n            response = await comicsApi.getMarvelComics(1);\n            break;\n          case \"dc\":\n            response = await comicsApi.getDCComics(1);\n            break;\n          case \"archie\":\n            response = await comicsApi.getArchieComics(1);\n            break;\n          case \"image\":\n            response = await comicsApi.getImageComics(1);\n            break;\n          // Add more cases as necessary for other publishers\n          default:\n            console.log(\"Unknown publisher\");\n            return;\n        }\n      } else if (searchQuery) {\n        // Search by query if provided\n        response = await comicsApi.getComicsThroughSearch(searchQuery, 1);\n      }\n\n      setComics(response || []);\n    } catch (error) {\n      console.error(\"There was an error fetching the comics!\", error);\n    }\n  };\n\n  return (\n    <div className=\"main\">\n      <div>\n        <label>\n          Publisher:\n          <input\n            type=\"text\"\n            value={publisher}\n            onChange={(e) => setPublisher(e.target.value)}\n            placeholder=\"Marvel, DC, Archie, etc.\"\n          />\n        </label>\n        <label>\n          Search Query:\n          <input\n            type=\"text\"\n            value={searchQuery}\n            onChange={(e) => setSearchQuery(e.target.value)}\n            placeholder=\"e.g., Batman\"\n          />\n        </label>\n        <button onClick={searchComics}>Search</button>\n      </div>\n\n      <div>\n        {comics.length > 0 ? (\n          <ul>\n            {comics.map((comic, index) => (\n              <li key={index}>\n                <h2>{comic.title}</h2>\n                <img src={comic.coverPage} alt={comic.title} style={{ width: '200px' }} />\n                <p>Description: {comic.description}</p>\n                <p>Year: {comic.information?.Year}</p>\n                <p>Size: {comic.information?.Size}</p>\n                <p>Format: {comic.information?.ImageFormat}</p>\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <p>No comics found.</p>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default ComicSearch;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}